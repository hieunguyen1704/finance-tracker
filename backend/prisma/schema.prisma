generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  name          String
  email         String         @unique
  password      String // Hashed password
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  transactions  Transaction[]
  budgets       Budget[]
  notifications Notification[]
  reminders     Reminder[]
  MagicLink     MagicLink[]
}

model MagicLink {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String   @unique
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
}

model Transaction {
  id          Int      @id @default(autoincrement())
  userId      Int
  categoryId  Int
  amount      Float
  type        String // "income" or "expense"
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user     User     @relation(fields: [userId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])
}

model Category {
  id           Int           @id @default(autoincrement())
  name         String
  type         String // "income" or "expense"
  description  String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
  budgets      Budget[]
}

model Budget {
  id         Int      @id @default(autoincrement())
  userId     Int
  categoryId Int
  amount     Float
  startDate  DateTime
  endDate    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user         User          @relation(fields: [userId], references: [id])
  category     Category      @relation(fields: [categoryId], references: [id])
  budgetUsages BudgetUsage[]
}

model BudgetUsage {
  id        Int      @id @default(autoincrement())
  budgetId  Int
  spent     Float    @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  budget Budget @relation(fields: [budgetId], references: [id])
}

model Notification {
  id        Int      @id @default(autoincrement())
  userId    Int
  type      String // "budget", "goal", etc.
  message   String
  isSent    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model Reminder {
  id          Int      @id @default(autoincrement())
  userId      Int
  title       String
  description String?
  remindAt    DateTime
  isSent      Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}
